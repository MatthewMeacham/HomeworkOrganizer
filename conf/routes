# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Application
GET    /                                                         controllers.Application.index()
GET    /login/                                                   controllers.Application.login()
GET    /logout/                                                  controllers.Application.logout(uniqueID: java.util.UUID)
POST   /authenticate/                                            controllers.Application.authenticate()
GET    /faq/                                                     controllers.Application.faq()
GET    /contact/                                                 controllers.Application.contactUsPage()
POST   /contact/                                                 controllers.Application.contactUs()
GET	   /privacyPolicy/											 controllers.Application.privacyPolicy()
GET	   /termsAndConditions/										 controllers.Application.termsAndConditions()

# Assignments
GET    /assn/edit/:assnID/:studentID/                            controllers.Assignments.read(assnID: String, studentID: String)
POST   /assn/edit/                                               controllers.Assignments.update(assnID: String, studentID: String)
GET    /parent/assn/edit/:assnID/:parentID/:studentID/			 controllers.Assignments.readForParent(assnID: Long, parentID: java.util.UUID, studentID: java.util.UUID)
POST   /parent/assn/edit/										 controllers.Assignments.updateForParent(assnID: Long, parentID: java.util.UUID, studentID: java.util.UUID)
GET    /teacher/assn/edit/:assnID/:teacherID/                    controllers.Assignments.readForTeacher(assnID: String, teacherID: String)
POST   /teacher/assn/edit/                                       controllers.Assignments.updateForTeacher(assnID: String, teacherID: String)
POST   /profileAssnChanged/                                      controllers.Assignments.create(studentID: String)
POST   /profileAssnChangedTeacher/                               controllers.Assignments.createForTeacher(teacherID: String)
POST   /assn/delete/                                             controllers.Assignments.delete(assnID: String, studentID: String)
POST   /parent/assn/delete/										 controllers.Assignments.deleteForParent(assnID: Long, parentID: java.util.UUID, studentID: java.util.UUID)
POST   /teacher/assn/delete/                                     controllers.Assignments.deleteForTeacher(assnID: String, teacherID: String)
POST   /assn/deleteFinished/									 controllers.Assignments.deleteFinished(assnID: String, studentID: String)
POST   /assn/deleteAllFinished/									 controllers.Assignments.deleteAllFinished(studentID: String)
POST   /finishedAssn/                                            controllers.Assignments.setFinished(assnID: String, studentID: String)
POST   /unFinishedAssn/                                          controllers.Assignments.setUnfinished(assnID: String, studentID: String)
GET	   /assn/download/											 controllers.Assignments.createPrintableDocument(studentID: java.util.UUID)
GET    /parent/assn/download/									 controllers.Assignments.createPrintableDocumentForParent(parentID: java.util.UUID)
GET    /teacher/assn/download/									 controllers.Assignments.createPrintableDocumentForTeacher(teacherID: java.util.UUID)

# Classes
GET    /schoolClass/editPage/:schoolClassID/:studentID/          controllers.Classes.read(schoolClassID: String, studentID: String)
POST   /schoolClass/edit/                                        controllers.Classes.update(schoolClassID: String, studentID: String)
GET    /teacher/schoolClass/editPage/:schoolClassID/:teacherID/  controllers.Classes.readForTeacher(schoolClassID: String, teacherID: String)
POST   /teacher/schoolClass/edit/                                controllers.Classes.updateForTeacher(schoolClassID: String, teacherID: String)
POST   /profileClassChanged/                                     controllers.Classes.create(studentID: String)
POST   /newSchoolClass/                                          controllers.Classes.createForTeacher(teacherID: String)
POST   /newSchoolClassFromTeacher/                               controllers.Classes.createFromTeacher(studentID: String)
POST   /schoolClass/delete/                                      controllers.Classes.delete(schoolClassID: String, studentID: String)
POST   /teacher/schoolClass/delete/                              controllers.Classes.deleteForTeacher(schoolClassID: String, teacherID: String)

# Parents
GET    /parent/profile/                                          controllers.Parents.toProfile(parentID: String)
POST   /parent/settings/eit/                                     controllers.Parents.updateSettings(parentID: String, studentID: String)
POST   /parent/addchild/                                         controllers.Parents.createChild(parentID: String)
GET    /parent/tochild/                                          controllers.Parents.redirectToStudent(studentID: java.util.UUID, parentID: String)
GET    /parent/refresh/											 controllers.Parents.refresh(parentID: java.util.UUID)
POST   /parent/child/delete/									 controllers.Parents.deleteChildAccount(parentID: java.util.UUID, studentID: java.util.UUID)
POST   /parent/delete/											 controllers.Parents.deleteParentAccount(parentID: java.util.UUID)

# Signups
GET    /signup/                                                  controllers.Signups.accountTypeSelector()
GET    /signup/student/                                          controllers.Signups.studentForm()
POST   /signup/student/                                          controllers.Signups.createStudent()
GET    /signup/parent/                                           controllers.Signups.parentForm()
POST   /signup/parent/                                           controllers.Signups.createParent()
GET    /signup/teacher/                                          controllers.Signups.teacherForm()
POST   /signup/teacher/                                          controllers.Signups.createTeacher()

# Students
GET    /student/profile/                                         controllers.Students.toProfile(studentID: String)
POST   /student/settings/update                                  controllers.Students.updateSettings(studentID: String)
GET    /student/refresh/                                         controllers.Students.refresh(studentID: java.util.UUID)
POST   /student/delete/											 controllers.Students.deleteStudentAccount(studentID: java.util.UUID)

# Teachers
GET    /teacher/profile/                                         controllers.Teachers.toProfile(teacherID: java.util.UUID)
POST   /teacher/settings/edit                                    controllers.Teachers.updateSettings(teacherID: String)
GET    /teacher/refresh/										 controllers.Teachers.refresh(teacherID: java.util.UUID)
POST   /teacher/delete/                                          controllers.Teachers.deleteTeacherAccount(teacherID: java.util.UUID)

# Map static resources from the /public folder to the /assets URL path
GET    /assets/*file                                             controllers.Assets.versioned(path="/public", file: Asset)
